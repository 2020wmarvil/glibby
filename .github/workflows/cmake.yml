name: CMake build, test, and generate docs

on:
  pull_request:
  push:
    branches: [main, actions-dev]

env:
  BUILD_TYPE: Release

jobs:
  build_and_test:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest] #, macOS-latest]

    steps:
    - uses: actions/checkout@v1
    - uses: humbletim/setup-vulkan-sdk@v1.2.0
      with:
        vulkan-query-version: 1.3.204.0
        vulkan-components: Vulkan-Headers, Vulkan-Loader
        vulkan-use-cache: true 
    
    - name: Install Dependencies
      run:   |
         if [ "$RUNNER_OS" == "Linux" ]; then
              sudo apt update
              sudo apt install -y doxygen libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libxext-dev libglfw3-dev libgl1-mesa-dev libglu1-mesa-dev
         #elif [ "$RUNNER_OS" == "Windows" ]; then
         #     choco install important_windows_software
         #else
         #     echo "$RUNNER_OS not supported"
         #     exit 1
         fi
      shell: bash
   
    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DGLIBBY_BUILD_RENDERER=ON -DGLIBBY_BUILD_EXAMPLES=ON -DGLIBBY_BUILD_DOCS=ON 
      
    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: ctest -C $BUILD_TYPE

  deploy_docs:
    needs: build_and_test
    runs-on: ubuntu-latest

##    name: Deploy Docs to GH Pages
##    steps:
##    - uses: actions/checkout@v1

    - name: Deploy Docs to GH Pages
      uses: ActionwareIO/branch-push-action@action
      with:
        branch: gh-pages
        files: |
          ${{runner.workspace}}/build/docs/html
        GITHUB_TOKEN: ${{secrets.GLIBBY_ACCESS_TOKEN_PAGES_DEPLOYMENT}}